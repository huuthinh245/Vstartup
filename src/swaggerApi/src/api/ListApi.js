/**
 * REMS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GenericError', 'model/ListCity', 'model/ListOption'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/GenericError'), require('../model/ListCity'), require('../model/ListOption'));
  } else {
    // Browser globals (root is window)
    if (!root.RemsApi) {
      root.RemsApi = {};
    }
    root.RemsApi.ListApi = factory(root.RemsApi.ApiClient, root.RemsApi.GenericError, root.RemsApi.ListCity, root.RemsApi.ListOption);
  }
}(this, function(ApiClient, GenericError, ListCity, ListOption) {
  'use strict';

  /**
   * List service.
   * @module api/ListApi
   * @version 1.0.0
   */

  /**
   * Constructs a new ListApi. 
   * @alias module:api/ListApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the city operation.
     * @callback module:api/ListApi~cityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ListApi~cityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCity}
     */
    this.city = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ListCity;

      return this.apiClient.callApi(
        '/list/city', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the option operation.
     * @callback module:api/ListApi~optionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListOption} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ListApi~optionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListOption}
     */
    this.option = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ListOption;

      return this.apiClient.callApi(
        '/list/option', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
