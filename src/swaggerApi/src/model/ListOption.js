/**
 * REMS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Direction', 'model/Method', 'model/PriceUnit', 'model/ProjectType', 'model/RealtyType', 'model/Utility'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Direction'), require('./Method'), require('./PriceUnit'), require('./ProjectType'), require('./RealtyType'), require('./Utility'));
  } else {
    // Browser globals (root is window)
    if (!root.RemsApi) {
      root.RemsApi = {};
    }
    root.RemsApi.ListOption = factory(root.RemsApi.ApiClient, root.RemsApi.Direction, root.RemsApi.Method, root.RemsApi.PriceUnit, root.RemsApi.ProjectType, root.RemsApi.RealtyType, root.RemsApi.Utility);
  }
}(this, function(ApiClient, Direction, Method, PriceUnit, ProjectType, RealtyType, Utility) {
  'use strict';




  /**
   * The ListOption model module.
   * @module model/ListOption
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ListOption</code>.
   * @alias module:model/ListOption
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>ListOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ListOption} obj Optional instance to populate.
   * @return {module:model/ListOption} The populated <code>ListOption</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('utility')) {
        obj['utility'] = ApiClient.convertToType(data['utility'], [Utility]);
      }
      if (data.hasOwnProperty('project_type')) {
        obj['project_type'] = ApiClient.convertToType(data['project_type'], [ProjectType]);
      }
      if (data.hasOwnProperty('realty_type')) {
        obj['realty_type'] = ApiClient.convertToType(data['realty_type'], [RealtyType]);
      }
      if (data.hasOwnProperty('method')) {
        obj['method'] = ApiClient.convertToType(data['method'], [Method]);
      }
      if (data.hasOwnProperty('direction')) {
        obj['direction'] = ApiClient.convertToType(data['direction'], [Direction]);
      }
      if (data.hasOwnProperty('price_unit')) {
        obj['price_unit'] = ApiClient.convertToType(data['price_unit'], [PriceUnit]);
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/Utility>} utility
   */
  exports.prototype['utility'] = undefined;
  /**
   * @member {Array.<module:model/ProjectType>} project_type
   */
  exports.prototype['project_type'] = undefined;
  /**
   * @member {Array.<module:model/RealtyType>} realty_type
   */
  exports.prototype['realty_type'] = undefined;
  /**
   * @member {Array.<module:model/Method>} method
   */
  exports.prototype['method'] = undefined;
  /**
   * @member {Array.<module:model/Direction>} direction
   */
  exports.prototype['direction'] = undefined;
  /**
   * @member {Array.<module:model/PriceUnit>} price_unit
   */
  exports.prototype['price_unit'] = undefined;



  return exports;
}));


